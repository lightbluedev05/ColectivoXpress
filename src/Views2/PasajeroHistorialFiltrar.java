/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views2;

import Models.Boleto;
import Models.Pasajero;
import Models.Viaje;
import Repository.BoletoRepository;
import javax.swing.*;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Mihae
 */
public class PasajeroHistorialFiltrar extends javax.swing.JFrame {

    private Statement st;
    private Pasajero pasajero;
    private JTable tabla_viajes;  
    private JTable datos_conductor;
    private PasajeroHistorial panelHistorial; 

    public PasajeroHistorialFiltrar(Statement st, Pasajero pasajero, PasajeroHistorial panelHistorial) {
        this.st = st;
        this.pasajero = pasajero;
        this.panelHistorial = panelHistorial;
        
        // Obtener referencias de las tablas del panel principal
        this.tabla_viajes = panelHistorial.tabla_viajes;  // Usa la tabla con más columnas
        this.datos_conductor = panelHistorial.tabla_conductor;
        
        initComponents();
        this.setLocationRelativeTo(null);
        cargarFechas();
        cargarFiltrosAdicionales(); 

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    private void cargarFiltrosAdicionales() {
    // Cargar Orígenes
    box_origen.addItem("Todos");
    box_destino.addItem("Todos");
    box_estado.addItem("Todos");
    box_estado.addItem("Disponible");
    box_estado.addItem("Terminado");

    // Obtener viajes del pasajero
    List<Viaje> viajes = pasajero.ver_historial_viajes(st);
    
    // Conjunto para almacenar orígenes únicos
    Set<String> origenes = new HashSet<>();
    Set<String> destinos = new HashSet<>();
    
    // Recopilar orígenes y destinos únicos
    for (Viaje viaje : viajes) {
        origenes.add(viaje.get_ruta().get_origen());
        destinos.add(viaje.get_ruta().get_destino());
    }
    
    // Agregar orígenes al ComboBox
    for (String origen : origenes) {
        box_origen.addItem(origen);
    }
    
    // Agregar destinos al ComboBox
    for (String destino : destinos) {
        box_destino.addItem(destino);
    }
}
    
    
        private void cargarFechas() {
        // Cargar años
        for (int i = 2020; i <= 2030; i++) {
            año_desde.addItem(String.valueOf(i));
            año_hasta.addItem(String.valueOf(i));
        }

        // Cargar meses
        for (int i = 1; i <= 12; i++) {
            mes_desde.addItem(String.format("%02d", i));
            mes_hasta.addItem(String.format("%02d", i));
        }

        // Cargar días
        for (int i = 1; i <= 31; i++) {
            dia_desde.addItem(String.format("%02d", i));
            dia_hasta.addItem(String.format("%02d", i));
        }
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buscar_porfiltro = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        año_desde = new javax.swing.JComboBox<>();
        mes_desde = new javax.swing.JComboBox<>();
        dia_desde = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        año_hasta = new javax.swing.JComboBox<>();
        mes_hasta = new javax.swing.JComboBox<>();
        dia_hasta = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        box_origen = new javax.swing.JComboBox<>();
        box_destino = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        box_estado = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(240, 245, 247));

        buscar_porfiltro.setBackground(new java.awt.Color(41, 82, 85));
        buscar_porfiltro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buscar_porfiltro.setForeground(new java.awt.Color(240, 245, 247));
        buscar_porfiltro.setText("Buscar");
        buscar_porfiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_porfiltroActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(22, 38, 35));
        jLabel10.setText("Filtrar Busqueda");

        jPanel4.setForeground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(22, 38, 35));
        jLabel1.setText("Fecha");

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        año_desde.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel2.add(año_desde, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 57, -1, -1));

        mes_desde.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel2.add(mes_desde, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 57, -1, -1));

        dia_desde.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel2.add(dia_desde, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 57, 50, -1));

        jLabel4.setText("Dia");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel5.setText("Mes");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jLabel3.setText("Año");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(41, 82, 85));
        jLabel13.setText("Desde");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 50, -1));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(41, 82, 85));
        jLabel6.setText("Hasta");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 40, -1));

        año_hasta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel3.add(año_hasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 57, -1, -1));

        mes_hasta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel3.add(mes_hasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 57, -1, -1));

        dia_hasta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel3.add(dia_hasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 57, 50, -1));

        jLabel7.setText("Dia");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel8.setText("Mes");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jLabel9.setText("Año");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(101, 101, 101))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(22, 38, 35));
        jLabel11.setText("Viaje");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 82, 85));
        jLabel2.setText("Origen");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(41, 82, 85));
        jLabel12.setText("Destino");

        box_origen.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        box_destino.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(41, 82, 85));
        jLabel14.setText("Estado");

        box_estado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(box_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(box_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(25, 25, 25))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(box_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(box_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(box_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(buscar_porfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(buscar_porfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscar_porfiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_porfiltroActionPerformed
        int añoDesde = Integer.parseInt((String) año_desde.getSelectedItem());
        int mesDesde = Integer.parseInt((String) mes_desde.getSelectedItem());
        int diaDesde = Integer.parseInt((String) dia_desde.getSelectedItem());

        int añoHasta = Integer.parseInt((String) año_hasta.getSelectedItem());
        int mesHasta = Integer.parseInt((String) mes_hasta.getSelectedItem());
        int diaHasta = Integer.parseInt((String) dia_hasta.getSelectedItem());

        // Crear las fechas
        LocalDate fechaDesde = LocalDate.of(añoDesde, mesDesde, diaDesde);
        LocalDate fechaHasta = LocalDate.of(añoHasta, mesHasta, diaHasta);

        // Obtener valores de filtros adicionales
        String origenSeleccionado = (String) box_origen.getSelectedItem();
        String destinoSeleccionado = (String) box_destino.getSelectedItem();
        String estadoSeleccionado = (String) box_estado.getSelectedItem();

        // Obtener el historial de viajes
        List<Viaje> viajes = this.pasajero.ver_historial_viajes(st);
        List<Boleto> boletos = new BoletoRepository(st).listar();

        // Limpiar las tablas antes de agregar nuevos datos
        DefaultTableModel modeloViaje = (DefaultTableModel) tabla_viajes.getModel();
        DefaultTableModel modeloConductor = (DefaultTableModel) datos_conductor.getModel();
        modeloViaje.setRowCount(0);
        modeloConductor.setRowCount(0);

        // Filtrar y llenar las tablas
        for (Viaje viaje : viajes) {
            LocalDate fechaViaje = viaje.get_fecha_salida(); 

            // Validar fecha
            boolean cumpleFecha = (fechaViaje.isEqual(fechaDesde) || fechaViaje.isAfter(fechaDesde)) &&
                                   (fechaViaje.isEqual(fechaHasta) || fechaViaje.isBefore(fechaHasta));

            // Validar origen
            boolean cumpleOrigen = origenSeleccionado.equals("Todos") || 
                                    viaje.get_ruta().get_origen().equals(origenSeleccionado);

            // Validar destino
            boolean cumpleDestino = destinoSeleccionado.equals("Todos") || 
                                     viaje.get_ruta().get_destino().equals(destinoSeleccionado);

            // Validar estado
            boolean cumpleEstado = estadoSeleccionado.equals("Todos") || 
                                    (estadoSeleccionado.equals("Disponible") == viaje.get_estado());

            // Si cumple todos los filtros
            if (cumpleFecha && cumpleOrigen && cumpleDestino && cumpleEstado) {
                // Buscar el boleto correspondiente
                String idBoleto = "N/A";
                for (Boleto boleto : boletos) {
                    if (boleto.get_viaje().get_id_viaje().equals(viaje.get_id_viaje()) && 
                        boleto.get_pasajero().get_dni().equals(this.pasajero.get_dni())) {
                        idBoleto = boleto.get_id_boleto();
                        break;
                    }
                }
                
            LocalTime horaSalida = viaje.get_hora_salida();
            String horaSalidaString = horaSalida.toString();

                // Agregar datos a la tabla de viajes
                String estadoTexto = viaje.get_estado() ? "Disponible" : "Terminado";
                modeloViaje.addRow(new Object[]{
                    idBoleto, // ID Boleto
                    viaje.get_id_viaje(),   // ID Viaje
                    viaje.get_fecha_salida(),
                    viaje.get_ruta().get_origen(),
                    viaje.get_ruta().get_destino(),
                    horaSalidaString,
                    viaje.get_ruta().get_precio(),
                    estadoTexto
                });

                // Agregar datos a la tabla de conductores
                if (viaje.get_conductor() != null) {
                    modeloConductor.addRow(new Object[]{
                        viaje.get_id_viaje(), // ID Viaje
                        viaje.get_conductor().get_nombre() != null && !viaje.get_conductor().get_nombre().isEmpty() 
                            ? viaje.get_conductor().get_nombre() 
                            : "N/A",

                        viaje.get_conductor().get_correo() != null && !viaje.get_conductor().get_correo().isEmpty() 
                            ? viaje.get_conductor().get_correo() 
                            : "N/A",

                        viaje.get_conductor().get_telefono() != null && !viaje.get_conductor().get_telefono().isEmpty() 
                            ? viaje.get_conductor().get_telefono() 
                            : "N/A",

                        viaje.get_conductor().get_placa_vehiculo() != null && !viaje.get_conductor().get_placa_vehiculo().isEmpty()
                            ? viaje.get_conductor().get_placa_vehiculo()
                            : "N/A",

                        viaje.get_conductor().get_modelo_vehiculo() != null && !viaje.get_conductor().get_modelo_vehiculo().isEmpty()
                            ? viaje.get_conductor().get_modelo_vehiculo()
                            : "N/A"
                    });
                }
            }
        }

        // Verificar si se encontraron viajes
        if (modeloViaje.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, 
                "No se encontraron viajes en el rango de fechas y filtros seleccionados.", 
                "Sin Resultados", 
                JOptionPane.INFORMATION_MESSAGE);
        }

        dispose();
    }//GEN-LAST:event_buscar_porfiltroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasajeroHistorialFiltrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasajeroHistorialFiltrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasajeroHistorialFiltrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasajeroHistorialFiltrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> año_desde;
    private javax.swing.JComboBox<String> año_hasta;
    private javax.swing.JComboBox<String> box_destino;
    private javax.swing.JComboBox<String> box_estado;
    private javax.swing.JComboBox<String> box_origen;
    private javax.swing.JButton buscar_porfiltro;
    private javax.swing.JComboBox<String> dia_desde;
    private javax.swing.JComboBox<String> dia_hasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JComboBox<String> mes_desde;
    private javax.swing.JComboBox<String> mes_hasta;
    // End of variables declaration//GEN-END:variables
}
