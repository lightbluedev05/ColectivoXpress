/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views2;

import Models.Boleto;
import Models.Pasajero;
import Models.Viaje;
import Repository.BoletoRepository;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.time.Duration;
import java.time.LocalTime;
import javax.swing.JOptionPane;
import java.util.ArrayList;

/**
 *
 * @author Mihae
 */
public class PasajeroHistorial extends javax.swing.JPanel {

    private Pasajero pasajero;
    public PasajeroHistorial(Pasajero pasajero) {
    this.pasajero = pasajero;
    
    List<Viaje> viajes = pasajero.ver_historial_viajes();
    
    initComponents();
    correcciones_iniciales();
    listar_viajes();
}
    
    private void correcciones_iniciales(){ 
        tabla_viajes.getColumnModel().getColumn(0).setPreferredWidth(10);
        tabla_viajes.setBackground(new Color(230, 230, 230));
    }
    
    private void listar_viajes() {
        DefaultTableModel modelo = (DefaultTableModel) tabla_viajes.getModel();
        modelo.setRowCount(0);      

        // Obtener el historial de viajes
        List<Viaje> viajes = pasajero.ver_historial_viajes(); 

        // Verificar si la lista de viajes está vacía
        if (viajes.isEmpty()) {
            System.out.println("No hay historial de viajes disponible.");

            JOptionPane.showMessageDialog(this, 
                "No tiene viajes en su historial.", 
                "Sin Viajes", 
                JOptionPane.INFORMATION_MESSAGE);

            return;
        }

        // Obtener la lista de boletos
        List<Boleto> boletos = new BoletoRepository().listar();

        // Si boletos es null, inicializar como lista vacía
        if (boletos == null) {
            boletos = new ArrayList<>();
        }

        // Procesar los viajes y boletos
        for (Viaje viaje : viajes) {
            String idBoleto = "N/A";

            for (Boleto boleto : boletos) {
                if (boleto != null && 
                    boleto.get_viaje() != null && 
                    boleto.get_viaje().get_id_viaje().equals(viaje.get_id_viaje()) && 
                    boleto.get_pasajero().get_dni().equals(pasajero.get_dni())) {
                    idBoleto = boleto.get_id_boleto();
                    break;
                }
            }

            String origen = viaje.get_ruta().get_origen(); 
            String destino = viaje.get_ruta().get_destino(); 

            // Obtener la duración y convertirla a String
            Duration tiempoAprox = viaje.get_ruta().get_tiempo_aproximado(); 
            long horas = tiempoAprox.toHours();
            long minutos = tiempoAprox.toMinutesPart(); 
            String tiempo_string = String.format("%02d:%02d", horas, minutos); 

            LocalTime horaSalida = viaje.get_hora_salida();
            String horaSalidaString = horaSalida.toString(); // Convertir LocalTime a String
            
            String estadoTexto = viaje.get_estado() ? "Disponible" : "Terminado"; // Convertir booleano a texto

            modelo.addRow(new Object[]{
                idBoleto, // ID Boleto
                viaje.get_id_viaje(), // ID Viaje
                viaje.get_fecha_salida(), // Fecha
                origen, // Origen
                destino, // Destino
                horaSalidaString,
                tiempo_string, // Tiempo Aproximado en formato "HH:mm"
                estadoTexto
            });
        }   

        // Si no se agregaron filas, mostrar mensaje
        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, 
                "No se encontraron viajes en su historial.", 
                "Sin Viajes", 
                JOptionPane.INFORMATION_MESSAGE);
        }

        tabla_viajes.setModel(modelo);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_viajes = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1010, 580));
        setPreferredSize(new java.awt.Dimension(1010, 580));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(23, 23, 23));
        jLabel1.setText("Listado de Viajes ");

        tabla_viajes.setBackground(new java.awt.Color(240, 245, 247));
        tabla_viajes.setForeground(new java.awt.Color(22, 38, 35));
        tabla_viajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Boleto", "ID Viaje", "Fecha", "Origen", "Destino", "Hora de Salida (HH:MM)", "Duracion (HH:MM)", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_viajes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabla_viajes);
        if (tabla_viajes.getColumnModel().getColumnCount() > 0) {
            tabla_viajes.getColumnModel().getColumn(0).setMaxWidth(300);
            tabla_viajes.getColumnModel().getColumn(1).setMaxWidth(200);
            tabla_viajes.getColumnModel().getColumn(2).setMaxWidth(150);
            tabla_viajes.getColumnModel().getColumn(3).setMaxWidth(150);
            tabla_viajes.getColumnModel().getColumn(4).setMaxWidth(150);
            tabla_viajes.getColumnModel().getColumn(5).setMaxWidth(400);
            tabla_viajes.getColumnModel().getColumn(6).setMaxWidth(280);
            tabla_viajes.getColumnModel().getColumn(7).setMaxWidth(150);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 87, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_viajes;
    // End of variables declaration//GEN-END:variables
}
